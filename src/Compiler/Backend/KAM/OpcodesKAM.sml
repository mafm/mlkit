(* This file is auto-generated with Tools/GenOpcodes; it is based *)
(* on the file /home/nh/ITU/MLKit/mlkit/kit/src/Compiler/Backend/KAM/KamInsts.spec *)

functor OpcodesKAM () : OPCODES_KAM = 
  struct
    val ALLOC_N = 0
    val ALLOC_IF_INF_N = 1
    val ALLOC_SAT_INF_N = 2
    val ALLOC_SAT_IF_INF_N = 3
    val ALLOC_ATBOT_N = 4
    val BLOCK_ALLOC_2 = 5
    val BLOCK_ALLOC_N = 6
    val BLOCK_ALLOC_IF_INF_N = 7
    val BLOCK_ALLOC_SAT_INF_N = 8
    val BLOCK_N = 9
    val BLOCK_ALLOC_SAT_IF_INF_N = 10
    val BLOCK_ALLOC_ATBOT_N = 11
    val CLEAR_ATBOT_BIT = 12
    val SET_ATBOT_BIT = 13
    val SET_BIT_30 = 14
    val SET_BIT_31 = 15
    val CLEAR_BIT_30_AND_31 = 16
    val UB_TAG_CON = 17
    val SELECT_STACK_M1 = 18
    val SELECT_STACK_M2 = 19
    val SELECT_STACK_M3 = 20
    val SELECT_STACK_M4 = 21
    val SELECT_STACK_N = 22
    val SELECT_ENV_N = 23
    val SELECT_0 = 24
    val SELECT_1 = 25
    val SELECT_2 = 26
    val SELECT_3 = 27
    val SELECT_N = 28
    val STORE_0 = 29
    val STORE_1 = 30
    val STORE_2 = 31
    val STORE_3 = 32
    val STORE_N = 33
    val STACK_ADDR_INF_BIT = 34
    val STACK_ADDR = 35
    val ENV_TO_ACC = 36
    val IMMED_INT0 = 37
    val IMMED_INT1 = 38
    val IMMED_INT2 = 39
    val IMMED_INT3 = 40
    val IMMED_INT = 41
    val IMMED_STRING = 42
    val IMMED_REAL = 43
    val PUSH = 44
    val PUSH_LBL = 45
    val POP_1 = 46
    val POP_2 = 47
    val POP_N = 48
    val APPLY_FN_CALL = 49
    val APPLY_FN_JMP = 50
    val APPLY_FUN_CALL1 = 51
    val APPLY_FUN_CALL2 = 52
    val APPLY_FUN_CALL3 = 53
    val APPLY_FUN_CALL = 54
    val APPLY_FUN_JMP = 55
    val RETURN_1_1 = 56
    val RETURN_N_1 = 57
    val RETURN = 58
    val C_CALL0 = 59
    val C_CALL1 = 60
    val C_CALL2 = 61
    val C_CALL3 = 62
    val C_CALL4 = 63
    val LABEL = 64
    val JMP_REL = 65
    val IF_NOT_EQ_JMP_REL_IMMED3 = 66
    val IF_NOT_EQ_JMP_REL_IMMED = 67
    val IF_LESS_THAN_JMP_REL_IMMED = 68
    val IF_GREATER_THAN_JMP_REL_IMMED = 69
    val DOT_LABEL = 70
    val JMP_VECTOR = 71
    val RAISE = 72
    val PUSH_EXN_PTR = 73
    val POP_EXN_PTR = 74
    val GLOBAL_EXN_HANDLER_REPORT = 75
    val LETREGION_FIN = 76
    val LETREGION_INF = 77
    val ENDREGION_INF = 78
    val RESET_REGION = 79
    val MAYBE_RESET_REGION = 80
    val RESET_REGION_IF_INF = 81
    val FETCH_DATA = 82
    val STORE_DATA = 83
    val HALT = 84
    val STACK_OFFSET = 85
    val POP_PUSH = 86
    val IMMED_INT_PUSH0 = 87
    val IMMED_INT_PUSH1 = 88
    val IMMED_INT_PUSH2 = 89
    val IMMED_INT_PUSH3 = 90
    val IMMED_INT_PUSH = 91
    val SELECT_PUSH0 = 92
    val SELECT_PUSH1 = 93
    val SELECT_PUSH2 = 94
    val SELECT_PUSH3 = 95
    val SELECT_PUSH = 96
    val SELECT_ENV_PUSH = 97
    val SELECT_ENV_CLEAR_ATBOT_BIT_PUSH = 98
    val STACK_ADDR_PUSH = 99
    val STACK_ADDR_INF_BIT_ATBOT_BIT_PUSH = 100
    val SELECT_STACK_PUSH = 101
    val ENV_PUSH = 102
    val PRIM_EQUAL_I = 103
    val PRIM_SUB_I1 = 104
    val PRIM_SUB_I2 = 105
    val PRIM_SUB_I = 106
    val PRIM_ADD_I1 = 107
    val PRIM_ADD_I2 = 108
    val PRIM_ADD_I = 109
    val PRIM_MUL_I = 110
    val PRIM_NEG_I = 111
    val PRIM_ABS_I = 112
    val PRIM_ADD_F = 113
    val PRIM_SUB_F = 114
    val PRIM_MUL_F = 115
    val PRIM_DIV_F = 116
    val PRIM_NEG_F = 117
    val PRIM_ABS_F = 118
    val PRIM_LESS_THAN_F = 119
    val PRIM_LESS_EQUAL_F = 120
    val PRIM_GREATER_THAN_F = 121
    val PRIM_GREATER_EQUAL_F = 122
    val PRIM_LESS_THAN = 123
    val PRIM_LESS_EQUAL = 124
    val PRIM_GREATER_THAN = 125
    val PRIM_GREATER_EQUAL = 126
    val PRIM_LESS_THAN_UNSIGNED = 127
    val PRIM_GREATER_THAN_UNSIGNED = 128
    val PRIM_LESS_EQUAL_UNSIGNED = 129
    val PRIM_GREATER_EQUAL_UNSIGNED = 130
    val PRIM_AND_W = 131
    val PRIM_OR_W = 132
    val PRIM_XOR_W = 133
    val PRIM_SHIFT_LEFT_W = 134
    val PRIM_SHIFT_RIGHT_SIGNED_W = 135
    val PRIM_SHIFT_RIGHT_UNSIGNED_W = 136
    val PRIM_ADD_W = 137
    val PRIM_SUB_W = 138
    val PRIM_MUL_W = 139
    val PRIM_SUB_I31 = 140
    val PRIM_ADD_I31 = 141
    val PRIM_MUL_I31 = 142
    val PRIM_NEG_I31 = 143
    val PRIM_ABS_I31 = 144
    val PRIM_XOR_W31 = 145
    val PRIM_SHIFT_LEFT_W31 = 146
    val PRIM_SHIFT_RIGHT_SIGNED_W31 = 147
    val PRIM_SHIFT_RIGHT_UNSIGNED_W31 = 148
    val PRIM_ADD_W31 = 149
    val PRIM_SUB_W31 = 150
    val PRIM_MUL_W31 = 151
    val PRIM_I31_TO_I = 152
    val PRIM_I_TO_I31 = 153
    val PRIM_W31_TO_W = 154
    val PRIM_W_TO_W31 = 155
    val PRIM_W31_TO_W_X = 156
    val PRIM_W_TO_I = 157
    val PRIM_FRESH_EXNAME = 158
  end
