The ML Kit with Regions version 2.1                March 12, 1998


                           INSTALLING

                    The ML Kit with Regions 

   http://www.diku.dk/research-groups/topps/activities/kit2/index.html


This file describes how to install The ML Kit with Regions version 2.1.

Because you are reading this, you have already succeeded in unpacking
the kit directory, "kit". This directory contains the sources of the
kit (src), the documentation (doc) and accompanying examples
(kitdemo). As you install and use the kit, more sub-directories and
files will be created in the directory "kit". If you want to rename
the directory from "kit" to something else or move it somewhere
else, now is the time to do so. From now on, let KITDIR denote the
absolute path on your machine to your kit directory (e.g.,
/home/thor1/tofte/kit)

1. Build the runtime system
-- ------------------------
Place yourself in KITDIR and type

  cd src/Runtime/Version17/

On HPUX:

  make runtimeHPUX  

On Sun OS/4: (* NOT SUPPORTED AT THE MOMENT *)

  make runtimeSUN_OS4

1(a) On other platforms:
------------------------
On other systems, you will probably have to build the runtime system
manually.  Look in the make file src/Runtime/Version17/Makefile.  The
difference between the HPUX and Sun OS/4 versions is mainly which C
compiler is used (cc or gcc).  Instruction count profiling is a
feature which is available on the HPUX version only. The runtime
system uses the system calls signal and setitimer in files
"Profiling.c", "Runtime.c" and "Exception.h".  The include files to
use may depend on the architecture.

2. Build rp2ps
-- -----------
The tool "rp2ps" converts output from a program compiled with region
profiling enabled to a profile graph in postscript, that is, it
converts an .rp file to a .ps file. From KITDIR do

   cd src/Runtime/Version17/Rp2ps/

On HPUX

   make rp2psHPUX

On SUN_OS4

  make rp2psSUN_OS4


3. Building the ML Kit with Regions compiler     (* ASSUMES HPUX *) 
-- -----------------------------------------
To compile the sources for the ML Kit with Regions, you need Standard
ML of New Jersey (SML/NJ) version 110.0.3 (and no other). The ML Kit
Web site at the top of this file contains links to SML/NJ.  The
executable Kit will take up around 8Mb of disc space. Building it
typically takes half an hour or so and is best done on a machine with
at least 64Mb of RAM.

Assuming that you have "sml-cm" (SML/NJ with the compilation manager
loaded) available on your system and that you are in the directory
KITDIR, type

  cd src/
  sml-cm

Within SML/NJ type 

  CM.make();

and the compilation manager will build the Kit. Once the Kit has been
built, you can install the Kit by writing

  K.install();

within SML/NJ. An executable version of the Kit is now available as

  KITDIR/bin/kit

Check whether things are properly configured by compiling a
small example: Start the executable kit from within the directory 

  KITDIR/kitdemo

and type 0 followed by carriage return (to enter the Project menu);
type 0 (and carriage return); type "hello.pm" (including the quotes
and carriage return); then compile the example by typing 1. When the
Kit has compiled and linked the project "hello.pm", exit by typing q;
and the executable "run", which is now located in the "kitdemo/"
directory, can be run.

As explained in "Programming with Regions in the ML Kit"
(doc/diku97-12.a4.ps.gz), every user can have her own kit script
containing personal preferences (flags to control optimizations, how
programs should be pretty-printed, etc.) The kit does not force you to
have a script file; the Kit will work fine with the default
settings. A sample kit script file "kit.script" is located in the
"kitdemo" directory.

If you want to modify the Kit, you should consider using K.kit() (from
within SML/NJ) instead of using K.install(); see the source file
KITDIR/src/Common/KitCompiler.sml for more information.


3(a) If you do not have HPUX or Sun OS/4
----------------------------------------
The Kit calls the C compiler to assemble (or compile) and link the HP
PA-RISC (or ANSI C) code files it generates, and this is done
differently on HPUX and Sun OS/4.  More specifically, the two
references "c_compiler" and "c_libs" are initialised differently for
HPUX and Sun OS/4.  You might well be able to run the Kit on other
systems (try "-lm" for "c_libs" and "gcc -ansi" or "cc -Aa" for
"c_compiler").


4. VCG
-- ---
The VCG tool which is used to show region flow graphs can be found at

    http://www.cs.uni-sb.de/RW/users/sander/html/gsvcg1.html


5. Comments and bug reports
-- ------------------------
Please see the www site:

   http://www.diku.dk/research-groups/topps/activities/kit2/index.html


