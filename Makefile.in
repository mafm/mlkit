SHELL=@SHELL@

KITVERSION=@PACKAGE_VERSION@

prefix=@prefix@
srcdir=@srcdir@
top_srcdir=@top_srcdir@
exec_prefix=@exec_prefix@
VPATH=@srcdir@

SYSCONFDIR=$(DESTDIR)@sysconfdir@
INSTDIR=$(DESTDIR)$(exec_prefix)
INSTDIR_KAM=$(DESTDIR)@exec_prefix@
INSTDIR_BARRY=$(DESTDIR)@exec_prefix@
MANDIR=$(DESTDIR)@mandir@
LIBDIR=$(DESTDIR)@libdir@
BINDIR=$(DESTDIR)@bindir@
DATADIR=$(DESTDIR)@datadir@

MKDIR=$(top_srcdir)/mkinstalldirs
INSTALL=@INSTALL@
INSTALLDATA=@INSTALL_DATA@
LN=@LN_S@
STRIP=strip
DIFF=diff
MLCOMP=@mlcomp@

CWD=$(shell pwd)

export INSTDIR
export INSTDIR_KAM
export INSTDIR_BARRY

include Makefiledefault

ARCH-OS=x86-linux
#ARCH-OS=x86-bsd

RPMDIR=/usr/src/rpm
#RPMDIR=/usr/src/redhat

# Some commands

@SET_MAKE@

CLEAN=rm -rf MLB PM CM *~ .\#*

.PHONY: mlkit mlkit_kam smlserver barry clean clean_mlb install
.PHONY: install_smlserver install_smlserver0

mlkit:
	$(MKDIR) bin
	$(MAKE) -C src mlkit
	$(MAKE) man_mlkit

all: mlkit mlkit_libs

smlserver_all: smlserver smlserver_libs

.PHONY: smlserver_basislib smlserver_libs smlserver_kitlib smlserver_weblib
smlserver_basislib:
	(cd basis && SML_LIB=$(CWD) ../bin/smlserverc -c basis.mlb)

smlserver_kitlib:
	(cd basis && SML_LIB=$(CWD) ../bin/smlserverc -c kitlib.mlb)

smlserver_weblib:
	(cd basis && SML_LIB=$(CWD) ../bin/smlserverc -c web/lib.mlb)

mlkit_basislibs:
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -no_gc basis.mlb)
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -gc basis.mlb)
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -gc -prof basis.mlb)
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -no_gc -prof basis.mlb)

mlkit_kitlibs:
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -no_gc kitlib.mlb)
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -gc kitlib.mlb)
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -gc -prof kitlib.mlb)
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -no_gc -prof kitlib.mlb)

smlserver_libs:
	(cd basis && find -name MLB -type d | xargs rm -rf)
	$(MAKE) smlserver_basislib
	$(MAKE) smlserver_kitlib
	$(MAKE) smlserver_weblib

mlkit_libs:
	(cd basis && find -name MLB -type d | xargs rm -rf)
	$(MAKE) mlkit_basislibs
	$(MAKE) mlkit_kitlibs

install_smlserver_basislib:
#	$(MKDIR) $(LIBDIR)/basis/MLB
	$(MKDIR) $(LIBDIR)/basis/MLB/SMLserver
#	$(MKDIR) $(LIBDIR)/basis/io/MLB
	$(MKDIR) $(LIBDIR)/basis/io/MLB/SMLserver
	$(MKDIR) $(LIBDIR)/basis/web/MLB/SMLserver
	$(MKDIR) $(LIBDIR)/basis/web/xmlrpc/MLB/SMLserver
	$(INSTALLDATA) -p basis/MLB/SMLserver/*.{d,eb,eb1,lnk,uo} $(LIBDIR)/basis/MLB/SMLserver
	$(INSTALLDATA) -p basis/io/MLB/SMLserver/*.{d,eb,eb1,lnk,uo} $(LIBDIR)/basis/io/MLB/SMLserver
	$(INSTALLDATA) -p basis/web/MLB/SMLserver/*.{d,eb,eb1,lnk,uo} $(LIBDIR)/basis/web/MLB/SMLserver
	$(INSTALLDATA) -p basis/web/xmlrpc/MLB/SMLserver/*.{d,eb,eb1,lnk,uo} $(LIBDIR)/basis/web/xmlrpc/MLB/SMLserver

install_mlkit_basislibs:
	$(MKDIR) $(LIBDIR)/basis/MLB
	$(MKDIR) $(LIBDIR)/basis/MLB/RI
	$(MKDIR) $(LIBDIR)/basis/MLB/RI_GC
	$(MKDIR) $(LIBDIR)/basis/MLB/RI_GC_PROF
	$(MKDIR) $(LIBDIR)/basis/MLB/RI_PROF
	$(MKDIR) $(LIBDIR)/basis/io/MLB
	$(MKDIR) $(LIBDIR)/basis/io/MLB/RI
	$(MKDIR) $(LIBDIR)/basis/io/MLB/RI_GC
	$(MKDIR) $(LIBDIR)/basis/io/MLB/RI_GC_PROF
	$(MKDIR) $(LIBDIR)/basis/io/MLB/RI_PROF
	$(INSTALLDATA) -p basis/MLB/RI/*.{d,eb,eb1,lnk,o} $(LIBDIR)/basis/MLB/RI
	$(INSTALLDATA) -p basis/MLB/RI_GC/*.{d,eb,eb1,lnk,o} $(LIBDIR)/basis/MLB/RI_GC
	$(INSTALLDATA) -p basis/MLB/RI_PROF/*.{d,eb,eb1,lnk,o,rev} $(LIBDIR)/basis/MLB/RI_PROF
	$(INSTALLDATA) -p basis/MLB/RI_GC_PROF/*.{d,eb,eb1,lnk,o,rev} $(LIBDIR)/basis/MLB/RI_GC_PROF
	$(INSTALLDATA) -p basis/io/MLB/RI/*.{d,eb,eb1,lnk,o} $(LIBDIR)/basis/io/MLB/RI
	$(INSTALLDATA) -p basis/io/MLB/RI_GC/*.{d,eb,eb1,lnk,o} $(LIBDIR)/basis/io/MLB/RI_GC
	$(INSTALLDATA) -p basis/io/MLB/RI_PROF/*.{d,eb,eb1,lnk,o,rev} $(LIBDIR)/basis/io/MLB/RI_PROF
	$(INSTALLDATA) -p basis/io/MLB/RI_GC_PROF/*.{d,eb,eb1,lnk,o,rev} $(LIBDIR)/basis/io/MLB/RI_GC_PROF

nj:
	$(MKDIR) bin
	$(MAKE) -C src mlkit_nj
	$(MAKE) man_mlkit

mlkit_kam:
	$(MKDIR) bin
	$(MAKE) -C src mlkit_kam

mlkit_kam_nj:
	$(MKDIR) bin
	$(MAKE) -C src mlkit_kam_nj

smlserver:
	$(MKDIR) bin
	$(MAKE) -C src smlserver
	$(MAKE) man_smlserver

smlserver_nj:
	$(MKDIR) bin
	$(MAKE) -C src smlserver_nj
	$(MAKE) man_smlserver

barry:
	$(MKDIR) bin
	$(MAKE) -C src barry

clean:
	$(CLEAN) bin run lib bootstrap dist man/man1/mlkit.1 man/man1/smlserverc.1
	cd basis && $(MAKE) clean
	cd doc/manual && $(MAKE) clean
	cd kitlib && $(CLEAN) run
	cd ml-yacc-lib && $(CLEAN)
	cd kitdemo && $(CLEAN) run */PM */*~
	cd test && $(MAKE) clean
	cd test_dev && $(CLEAN) run *.out *.log
	cd src && $(MAKE) clean
	$(MAKE) -C smlserver_demo clean
	cd smlserver && $(CLEAN)
	cd smlserver/xt && $(CLEAN)
	cd smlserver/xt/demolib && $(CLEAN)
	cd smlserver/xt/libxt && $(CLEAN)
	cd smlserver/xt/www && $(CLEAN)

clean_mlb:
	find . -name "MLB" -type d | xargs rm -Rf

#tgz_export:
#	cd ..; rm -rf mlkit-$(KITVERSION) mlkit-$(KITVERSION).tgz
#	cd ..; cvs -d linux.it.edu:/cvsroot -q export -D now -d mlkit-$(KITVERSION) mlkit/kit
#	cd ..; tar czf mlkit-$(KITVERSION).tgz mlkit-$(KITVERSION)
#	cd ..; rm -rf mlkit-$(KITVERSION)

#tgz:
#	cd ..; rm -rf mlkit-$(KITVERSION) mlkit-$(KITVERSION).tgz
#	cd ..; cp -d -f -p -R kit mlkit-$(KITVERSION)
#	cd ../mlkit-$(KITVERSION); $(MAKE) clean
#	cd ../mlkit-$(KITVERSION); rm -rf test_dev
#	cd ../mlkit-$(KITVERSION); rm -rf CVS */CVS */*/CVS */*/*/CVS */*/*/*/CVS */*/*/*/*/CVS */*/*/*/*/*/CVS
#	cd ../mlkit-$(KITVERSION); rm -rf .cvsignore */.cvsignore */*/.cvsignore \
#           */*/*/.cvsignore */*/*/*/.cvsignore */*/*/*/*/.cvsignore \
#           */*/*/*/*/*/.cvsignore
#	cd ..; tar czf mlkit-$(KITVERSION).tgz mlkit-$(KITVERSION)
#	cd ..; rm -rf mlkit-$(KITVERSION)

#tgz_smlserver:
#	cd ..; rm -rf smlserver-$(KITVERSION) smlserver-$(KITVERSION).tgz
#	cd ..; cp -d -f -p -R kit smlserver-$(KITVERSION)
#	cd ../smlserver-$(KITVERSION); $(MAKE) clean
#	cd ../smlserver-$(KITVERSION); rm -rf test_dev
#	cd ../smlserver-$(KITVERSION); rm -rf CVS */CVS */*/CVS */*/*/CVS */*/*/*/CVS */*/*/*/*/CVS */*/*/*/*/*/CVS
#	cd ../smlserver-$(KITVERSION); rm -rf .cvsignore */.cvsignore */*/.cvsignore \
#           */*/*/.cvsignore */*/*/*/.cvsignore */*/*/*/*/.cvsignore \
#           */*/*/*/*/*/.cvsignore
#	cd ..; tar czf smlserver-$(KITVERSION).tgz smlserver-$(KITVERSION)
#	cd ..; rm -rf smlserver-$(KITVERSION)

install_kitdemo:
	$(MKDIR) $(DATADIR)/kitdemo
	$(MKDIR) $(DATADIR)/kitdemo/utils
	$(INSTALLDATA) kitdemo/*.{sml,mlb,c} $(DATADIR)/kitdemo 
	$(INSTALLDATA) kitdemo/utils/*.{sml,mlb} $(DATADIR)/kitdemo/utils 

install_basis:
	$(MKDIR) $(LIBDIR)/basis
	$(MKDIR) $(LIBDIR)/basis/io
	$(INSTALLDATA) -p basis/*.{sml,mlb} $(LIBDIR)/basis
	$(INSTALLDATA) -p basis/io/*.{sml,sig} $(LIBDIR)/basis/io

install_man:
	$(MKDIR) $(MANDIR)
	$(MKDIR) $(MANDIR)/man1
	$(INSTALLDATA) man/man1/*.1 $(MANDIR)/man1

install_license:
	$(MKDIR) $(DATADIR)/doc/$(KIND)/license
	$(INSTALLDATA) doc/license/{GPL-LICENSE,MLKit-LICENSE,MLton-LICENSE,SMLNJ-LIB-LICENSE,SMLNJ-LICENSE} $(DATADIR)/doc/$(KIND)/license

install_top:
	$(MKDIR) $(INSTDIR)
	$(MKDIR) $(BINDIR)
	$(INSTALLDATA) Makefile Makefile.in $(INSTDIR)
	$(INSTALLDATA) Makefiledefault $(INSTDIR)
	$(INSTALL) mkinstalldirs configure $(INSTDIR)
	$(MAKE) install_basis

install_runtime:
	$(MKDIR) $(LIBDIR)/lib
	$(INSTALLDATA) lib/runtimeSystem.a $(LIBDIR)/lib
	$(INSTALLDATA) lib/runtimeSystemProf.a $(LIBDIR)/lib
	$(INSTALLDATA) lib/runtimeSystemGC.a $(LIBDIR)/lib
	$(INSTALLDATA) lib/runtimeSystemGCProf.a $(LIBDIR)/lib
	$(INSTALLDATA) lib/runtimeSystemGenGC.a $(LIBDIR)/lib
	$(INSTALLDATA) lib/runtimeSystemGenGCProf.a $(LIBDIR)/lib

install0:
	$(MKDIR) $(INSTDIR)
	$(MKDIR) $(BINDIR)
	$(INSTALL) bin/mlkit $(BINDIR)
	$(INSTALL) bin/mlkit-mllex $(BINDIR)
	$(INSTALL) bin/mlkit-mlyacc $(BINDIR)
	$(INSTALL) bin/rp2ps $(BINDIR)
	$(INSTALL) bin/kittester $(BINDIR)
	$(MKDIR) $(LIBDIR)
	$(MKDIR) $(LIBDIR)/mlkit
	$(MAKE) install_runtime LIBDIR=$(LIBDIR)/mlkit
	$(MAKE) install_basis LIBDIR=$(LIBDIR)/mlkit
	$(MAKE) install_mlkit_basislibs LIBDIR=$(LIBDIR)/mlkit
	$(MKDIR) $(MANDIR)
	$(MKDIR) $(MANDIR)/man1
	$(INSTALLDATA) man/man1/mlkit.1 $(MANDIR)/man1
	$(INSTALLDATA) man/man1/mlkit-mllex.1 $(MANDIR)/man1
	$(INSTALLDATA) man/man1/mlkit-mlyacc.1 $(MANDIR)/man1
	$(INSTALLDATA) man/man1/rp2ps.1 $(MANDIR)/man1
	$(MKDIR) $(DATADIR)/mlkit
	$(MAKE) install_kitdemo DATADIR=$(DATADIR)/mlkit
	$(MAKE) install_test DATADIR=$(DATADIR)/mlkit
	$(MKDIR) $(DATADIR)/doc
	$(MKDIR) $(DATADIR)/doc/mlkit
	$(MAKE) install_license KIND=mlkit
	$(INSTALLDATA) doc/mlkit.pdf $(DATADIR)/doc/mlkit/
	$(INSTALLDATA) src/Tools/ml-lex/mllex.pdf $(DATADIR)/doc/mlkit/
	$(INSTALLDATA) src/Tools/ml-yacc/doc/mlyacc.pdf $(DATADIR)/doc/mlkit/
	$(INSTALLDATA) NEWS $(DATADIR)/doc/mlkit/

install:
	$(MAKE) install0
	$(MKDIR) $(SYSCONFDIR)/mlkit
	if [ -e $(SYSCONFDIR)/mlkit/mlb-path-map ]; \
           then true; \
           else echo "SML_LIB $(exec_prefix)/lib/mlkit" > $(SYSCONFDIR)/mlkit/mlb-path-map; \
        fi

install_test:
	$(MKDIR) $(DATADIR)/test
	$(MKDIR) $(DATADIR)/test/mlyacc $(DATADIR)/test/ray $(DATADIR)/test/nucleic $(DATADIR)/test/danwang
	$(MKDIR) $(DATADIR)/test/barnes-hut $(DATADIR)/test/logic
	$(MKDIR) $(DATADIR)/test/DATA $(DATADIR)/test/LEXGEN_DATA $(DATADIR)/test/VLIW_DATA
	$(MKDIR) $(DATADIR)/test/ray/DATA $(DATADIR)/test/mlyacc/DATA
	$(INSTALL) test/Makefile $(DATADIR)/test
	$(INSTALL) test/Makefile test/*.{tst,sml,sig,mlb,out.ok,log.ok,txt,c} $(DATADIR)/test
	$(INSTALL) test/README $(DATADIR)/test 
	$(INSTALL) test/VLIW_DATA/*.s $(DATADIR)/test/VLIW_DATA 
	$(INSTALL) test/ray/DATA/TEST $(DATADIR)/test/ray/DATA
	$(INSTALL) test/ray/input test/ray/README test/ray/load test/ray/*.{sml,mlb} $(DATADIR)/test/ray
	$(INSTALL) test/nucleic/MAIL test/nucleic/*.{sml,mlb,tex,bbl} $(DATADIR)/test/nucleic
	$(INSTALL) test/danwang/*.{sml,sig,mlb} $(DATADIR)/test/danwang
	$(INSTALL) test/barnes-hut/*.{sml,mlb} test/barnes-hut/load test/barnes-hut/README $(DATADIR)/test/barnes-hut
	$(INSTALL) test/logic/*.{sml,mlb} $(DATADIR)/test/logic
	cd $(DATADIR)/test && rm -f testlink testcycl testbadl hardlinkA hardlinkB
	cd $(DATADIR)/test && ln -sf README testlink
	cd $(DATADIR)/test && ln -sf testcycl testcycl
	cd $(DATADIR)/test && ln -sf exists.not testbadl
	cd $(DATADIR)/test && echo -e 'hardlinkA' >> hardlinkA
	cd $(DATADIR)/test && ln -f hardlinkA hardlinkB

install_src:
	$(MKDIR) $(INSTDIR)/src
	$(MKDIR) $(INSTDIR)/src/Common $(INSTDIR)/src/Compiler $(INSTDIR)/src/Manager $(INSTDIR)/src/Pickle 
	$(MKDIR) $(INSTDIR)/src/CUtils $(INSTDIR)/src/Edlib $(INSTDIR)/src/Parsing $(INSTDIR)/src/Runtime 
	$(MKDIR) $(INSTDIR)/src/SMLserver $(INSTDIR)/src/Tools
	$(MKDIR) $(INSTDIR)/src/SMLserver/apache
	$(MKDIR) $(INSTDIR)/src/SMLserver/apache/test
	$(MKDIR) $(INSTDIR)/src/Common/EfficientElab
	$(MKDIR) $(INSTDIR)/src/Compiler/Backend $(INSTDIR)/src/Compiler/Lambda $(INSTDIR)/src/Compiler/Regions
	$(MKDIR) $(INSTDIR)/src/Compiler/Backend/Barry $(INSTDIR)/src/Compiler/Backend/Dummy $(INSTDIR)/src/Compiler/Backend/KAM
	$(MKDIR) $(INSTDIR)/src/Compiler/Backend/X86
	$(MKDIR) $(INSTDIR)/src/Tools/Benchmark $(INSTDIR)/src/Tools/GenOpcodes $(INSTDIR)/src/Tools/MlbMake $(INSTDIR)/src/Tools/Rp2ps
	$(MKDIR) $(INSTDIR)/src/Tools/Tester $(INSTDIR)/src/Tools/MspComp
	$(MKDIR) $(INSTDIR)/src/heap2exec
	$(INSTALLDATA) src/Makefile src/*.{sml,cm,in} $(INSTDIR)/src
	$(INSTALLDATA) src/Common/*.{mlb,sml,cm} $(INSTDIR)/src/Common
	$(INSTALLDATA) src/Common/EfficientElab/*.sml $(INSTDIR)/src/Common/EfficientElab
	$(INSTALLDATA) src/Compiler/*.{mlb,sml,cm} $(INSTDIR)/src/Compiler
	$(INSTALLDATA) src/Compiler/Lambda/*.sml $(INSTDIR)/src/Compiler/Lambda
	$(INSTALLDATA) src/Compiler/Regions/*.sml $(INSTDIR)/src/Compiler/Regions
	$(INSTALLDATA) src/Compiler/Backend/*.sml $(INSTDIR)/src/Compiler/Backend
	$(INSTALLDATA) src/Compiler/Backend/Barry/*.sml $(INSTDIR)/src/Compiler/Backend/Barry
	$(INSTALLDATA) src/Compiler/Backend/Dummy/*.sml $(INSTDIR)/src/Compiler/Backend/Dummy
	$(INSTALLDATA) src/Compiler/Backend/KAM/*.{sml,spec} $(INSTDIR)/src/Compiler/Backend/KAM
	$(INSTALLDATA) src/Compiler/Backend/X86/*.sml $(INSTDIR)/src/Compiler/Backend/X86
	$(INSTALLDATA) src/Manager/*.{sml,mlb,cm} $(INSTDIR)/src/Manager
	$(INSTALLDATA) src/Pickle/*.{sml,sig,mlb,cm} $(INSTDIR)/src/Pickle
	$(INSTALLDATA) src/CUtils/Makefile src/CUtils/*.{c,h} $(INSTDIR)/src/CUtils
	$(INSTALLDATA) src/Edlib/Makefile src/Edlib/*.{sml,mlb,cm} $(INSTDIR)/src/Edlib
	$(INSTALLDATA) src/Parsing/*.{sml,sig,grm,lex} $(INSTDIR)/src/Parsing
	$(INSTALLDATA) src/Runtime/Makefile src/Runtime/*.{c,h,in} $(INSTDIR)/src/Runtime
	$(INSTALLDATA) src/SMLserver/*.{c,h} $(INSTDIR)/src/SMLserver
	$(INSTALLDATA) src/SMLserver/apache/Makefile.in src/SMLserver/apache/Makefile src/SMLserver/apache/README $(INSTDIR)/src/SMLserver/apache
	$(INSTALLDATA) src/SMLserver/apache/Notes src/SMLserver/apache/*.{c,h,in} $(INSTDIR)/src/SMLserver/apache
	$(INSTALLDATA) src/SMLserver/apache/test/Makefile src/SMLserver/apache/test/*.{c,txt} $(INSTDIR)/src/SMLserver/apache/test
	$(INSTALLDATA) src/Tools/Benchmark/*.{sml,mlb} src/Tools/Benchmark/Makefile $(INSTDIR)/src/Tools/Benchmark
	$(INSTALLDATA) src/Tools/GenOpcodes/*.{sml,mlb,in} src/Tools/GenOpcodes/Makefile $(INSTDIR)/src/Tools/GenOpcodes
	$(INSTALLDATA) src/Tools/MlbMake/*.{sml,mlb,cm,in} src/Tools/MlbMake/Makefile $(INSTDIR)/src/Tools/MlbMake
	$(INSTALLDATA) src/Tools/Rp2ps/*.{c,h,in} src/Tools/Rp2ps/Makefile $(INSTDIR)/src/Tools/Rp2ps
	$(INSTALLDATA) src/Tools/Tester/*.{sml,mlb,in} src/Tools/Tester/Makefile $(INSTDIR)/src/Tools/Tester
	$(INSTALLDATA) src/Tools/MspComp/*.sml src/Tools/MspComp/Makefile $(INSTDIR)/src/Tools/MspComp
	$(INSTALLDATA) src/heap2exec/README src/heap2exec/run.$(ARCH-OS) $(INSTDIR)/src/heap2exec
	$(INSTALL) src/heap2exec/heap2exec $(INSTDIR)/src/heap2exec

bootstrap0: install_test install_src
	$(INSTALL) bin/kittester $(BINDIR)

bootstrap_first: 
	$(MAKE) install_top
	$(MAKE) install_runtime
	$(INSTALL) bin/{mlkit,rp2ps} $(BINDIR)
	$(MAKE) bootstrap0

bootstrap_next_build:
	cd src && $(MAKE) genopcodes BINDIR=../$(BINDIR)
	cd src/Compiler && SML_LIB=$(CWD) ../../bin/mlkit -gc native.mlb

bootstrap_next_install: 
	$(MAKE) install_top
	$(MAKE) install_runtime
	$(INSTALL) bin/{rp2ps,kittester} $(BINDIR)
	$(INSTALL) src/Compiler/run $(BINDIR)/mlkit
	$(MAKE) install_test
	$(MAKE) install_src

bootstrap_next: 
	$(MAKE) bootstrap_next_build
	$(MAKE) bootstrap_next_install

.PHONY: bootstrap
bootstrap:
	$(MKDIR) bootstrap
	$(CLEAN) bootstrap/mlkit-v1
	$(MAKE) bootstrap_first INSTDIR=bootstrap/mlkit-v1 DATADIR=bootstrap/mlkit-v1 LIBDIR=bootstrap/mlkit-v1 \
	                        MANDIR=bootstrap/mlkit-v1/man BINDIR=bootstrap/mlkit-v1/bin
	$(CLEAN) bootstrap/mlkit-v2
	$(MAKE) -C bootstrap/mlkit-v1 bootstrap_next INSTDIR=../mlkit-v2 DATADIR=../mlkit-v2 LIBDIR=../mlkit-v2 \
	                        MANDIR=../mlkit-v2/man BINDIR=../mlkit-v2/bin
	$(CLEAN) bootstrap/mlkit-v3
	$(MAKE) -C bootstrap/mlkit-v2 bootstrap_next INSTDIR=../mlkit-v3 DATADIR=../mlkit-v3 LIBDIR=../mlkit-v3 \
	                        MANDIR=../mlkit-v3/man BINDIR=../mlkit-v3/bin
	$(STRIP) bootstrap/mlkit-v2/bin/mlkit
	$(STRIP) bootstrap/mlkit-v3/bin/mlkit
	if $(DIFF) -s bootstrap/mlkit-v2/bin/mlkit bootstrap/mlkit-v3/bin/mlkit ; then true; else false; fi
	$(INSTALL) bootstrap/mlkit-v3/bin/mlkit bin/mlkit

.PHONY: man_mlkit
man_mlkit:
	$(MKDIR) man/man1
	SML_LIB=$(exec_prefix)/lib/mlkit bin/mlkit -man > man/man1/mlkit.1

.PHONY: man_smlserver
man_smlserver:
	$(MKDIR) man/man1
	SML_LIB=$(exec_prefix)/lib/smlserver bin/smlserverc -man > man/man1/smlserverc.1

# -----------------------------------------------------
# Target for building MLKit binary package. The target
# assumes that the mlkit has been build using
#  $ ./autobuild
#  $ ./configure --sysconfdir=/etc --prefix=/usr
#  $ make
#  $ make mlkit_libs
# -----------------------------------------------------
MLKIT_DIST_BIN=mlkit-$(KITVERSION)-i386
.PHONY: mlkit_i386_tgz
mlkit_i386_tgz:
	$(MKDIR) dist
	rm -rf dist/$(MLKIT_DIST_BIN)
	$(MAKE) install0 DESTDIR=$(CWD)/dist/$(MLKIT_DIST_BIN) prefix=
	$(INSTALLDATA) doc/README_BIN dist/$(MLKIT_DIST_BIN)/share/doc/mlkit
	(cd dist && tar czvf $(MLKIT_DIST_BIN).tgz $(MLKIT_DIST_BIN))

# -----------------------------------------------------
# Target for building SMLserver binary package. The target
# assumes that SMLserver has been build using
#  $ ./autobuild
#  $ ./configure --sysconfdir=/etc --prefix=/usr --enable-SMLserver --with-apxs=`which apxs2` --enable-odbc
#  $ make smlserver
#  $ make smlserver_libs
# -----------------------------------------------------
SMLSERVER_DIST_BIN=smlserver-$(KITVERSION)-i386
.PHONY: smlserver_i386_tgz
smlserver_i386_tgz:
	$(MKDIR) dist
	rm -rf dist/$(SMLSERVER_DIST_BIN)
	$(MAKE) install_smlserver0 DESTDIR=$(CWD)/dist/$(SMLSERVER_DIST_BIN) prefix=
	$(INSTALLDATA) doc/README_SMLSERVER_BIN dist/$(SMLSERVER_DIST_BIN)/share/doc/smlserver
	(cd dist && tar czvf $(SMLSERVER_DIST_BIN).tgz $(SMLSERVER_DIST_BIN))

# -----------------------------------------------------
# The target for building source distributions should 
# not be used - instead make an svn tag for the release 
# "mlkit-X.Y.Z" as follows:
#   svn copy https://mlkit.svn.sourceforge.net/svnroot/mlkit/trunk \
#            https://mlkit.svn.sourceforge.net/svnroot/mlkit/tags/mlkit-X.Y.Z \
#      -m "Tagging release of MLKit"
# and make people checkout the releases.
# -----------------------------------------------------


MLKIT_DIST_SRC=mlkit-$(KITVERSION)-src
.PHONY: mlkit_src_tgz
mlkit_src_tgz:
	./autobuild
	$(MKDIR) dist
	rm -rf dist/$(MLKIT_DIST_SRC)
	$(MKDIR) dist/$(MLKIT_DIST_SRC)
	$(MAKE) install_src INSTDIR=dist/$(MLKIT_DIST_SRC)
	$(MAKE) install_test DATADIR=dist/$(MLKIT_DIST_SRC)
	$(MAKE) install_basis LIBDIR=dist/$(MLKIT_DIST_SRC)
	$(MAKE) install_kitdemo DATADIR=dist/$(MLKIT_DIST_SRC)
	$(MAKE) install_man MANDIR=dist/$(MLKIT_DIST_SRC)/man
	$(INSTALLDATA) README dist/$(MLKIT_DIST_SRC)
	$(INSTALLDATA) NEWS dist/$(MLKIT_DIST_SRC)
	$(INSTALLDATA) Makefile.in dist/$(MLKIT_DIST_SRC)
	$(INSTALL) configure dist/$(MLKIT_DIST_SRC)
	$(INSTALLDATA) Makefiledefault dist/$(MLKIT_DIST_SRC)
	$(INSTALL) mkinstalldirs dist/$(MLKIT_DIST_SRC)
	$(INSTALL) install-sh dist/$(MLKIT_DIST_SRC)
	$(MKDIR) dist/$(MLKIT_DIST_SRC)/smlserver_demo
	$(INSTALL) smlserver_demo/Makefile.in dist/$(MLKIT_DIST_SRC)/smlserver_demo
	$(MKDIR) dist/$(MLKIT_DIST_SRC)/doc
	$(MAKE) install_license DATADIR=dist/$(MLKIT_DIST_SRC)
	$(INSTALLDATA) doc/{README_BIN.in,mlkit.pdf} dist/$(MLKIT_DIST_SRC)/doc
	(cd dist && tar czvf $(MLKIT_DIST_SRC).tgz $(MLKIT_DIST_SRC))

# The following is obsolete!!
bootstrap_kam: install_kam bootstrap0

install_kam:
	rm -rf $(INSTDIR_KAM)
	$(MKDIR) $(INSTDIR_KAM)
	$(MKDIR) $(INSTDIR_KAM)/bin
	$(MKDIR) $(INSTDIR_KAM)/doc
	$(INSTALL) bin/mlkit_kam $(INSTDIR_KAM)/bin
	$(INSTALL) bin/kam $(INSTDIR_KAM)/bin
	$(INSTALLDATA) copyright $(INSTDIR_KAM)
	$(INSTALLDATA) README $(INSTDIR_KAM)
	$(INSTALLDATA) -R kitdemo $(INSTDIR_KAM)/kitdemo 
	$(INSTALLDATA) -R ml-yacc-lib $(INSTDIR_KAM)/ml-yacc-lib
	$(INSTALLDATA) -R basis $(INSTDIR_KAM)/basis
	$(INSTALLDATA) doc/mlkit.pdf $(INSTDIR_KAM)/doc

#	echo '#!/bin/sh' > $(INSTDIR_KAM)/bin/mlkit_kam
#	echo -e '$(INSTDIR_KAM)/bin/mlkit_kam.$(ARCH-OS) $(INSTDIR_KAM) $$*' >> $(INSTDIR_KAM)/bin/mlkit_kam
#	chmod a+x $(INSTDIR_KAM)/bin/mlkit_kam
#	rm -f /usr/bin/mlkit_kam
#	cp -f -p $(INSTDIR_KAM)/bin/mlkit_kam /usr/bin/mlkit_kam

install_barry:
	rm -rf $(INSTDIR_BARRY)
	$(MKDIR) $(INSTDIR_BARRY)
	$(MKDIR) $(INSTDIR_BARRY)/bin
	$(MKDIR) $(INSTDIR_BARRY)/doc
	$(INSTALL) bin/barry.$(ARCH-OS) $(INSTDIR_BARRY)/bin
	$(INSTALL) copyright $(INSTDIR_BARRY)
	$(INSTALL) README $(INSTDIR_BARRY)
	$(INSTALL) README_BARRY $(INSTDIR_BARRY)
	$(INSTALL) -R kitdemo $(INSTDIR_BARRY)/kitdemo 
	$(INSTALL) -R ml-yacc-lib $(INSTDIR_BARRY)/ml-yacc-lib
	$(INSTALL) -R basis $(INSTDIR_BARRY)/basis
	$(INSTALL) doc/mlkit.pdf $(INSTDIR_BARRY)/doc
	chown -R `whoami`.`whoami` $(INSTDIR_BARRY)
	chmod -R ug+rw $(INSTDIR_BARRY)
	chmod -R o+r $(INSTDIR_BARRY)

	echo '#!/bin/sh' > $(INSTDIR_BARRY)/bin/barry
	echo -e '$(INSTDIR_BARRY)/bin/barry.$(ARCH-OS) $(INSTDIR_BARRY) $$*' >> $(INSTDIR_BARRY)/bin/barry
	chmod a+x $(INSTDIR_BARRY)/bin/barry
	rm -f /usr/bin/barry
	cp -f -p $(INSTDIR_BARRY)/bin/barry /usr/bin/barry

install_smlserver0:
	$(MKDIR) $(INSTDIR)
	$(MKDIR) $(BINDIR)
	$(INSTALL) bin/smlserverc $(BINDIR)
	$(INSTALL) bin/smlserver-wrap $(BINDIR)
	$(INSTALL) bin/mspcomp $(BINDIR)
	$(MKDIR) $(LIBDIR)/smlserver
	$(MAKE) install_smlserver_basislib LIBDIR=$(LIBDIR)/smlserver
	$(MAKE) install_basis LIBDIR=$(LIBDIR)/smlserver
	$(MKDIR) $(LIBDIR)/smlserver/basis/web
	$(MKDIR) $(LIBDIR)/smlserver/basis/web/xmlrpc
	$(INSTALLDATA) -p basis/web/*.{sml,mlb} $(LIBDIR)/smlserver/basis/web
	$(INSTALLDATA) -p basis/web/xmlrpc/*.{sml,sig,mlb} $(LIBDIR)/smlserver/basis/web/xmlrpc
#	$(MKDIR) $(MANDIR)
	$(MKDIR) $(MANDIR)/man1
	$(INSTALLDATA) man/man1/smlserverc.1 $(MANDIR)/man1
#	$(MKDIR) $(INSTDIR)/share
#	$(MKDIR) $(INSTDIR)/share/smlserver
#	$(MKDIR) $(INSTDIR)/share/doc
	$(MKDIR) $(INSTDIR)/share/doc/smlserver
	$(MAKE) install_license KIND=smlserver
	$(INSTALLDATA) README_SMLSERVER $(DATADIR)/doc/smlserver
	$(INSTALLDATA) NEWS_SMLSERVER $(DATADIR)/doc/smlserver
	$(MAKE) -C smlserver_demo install LIBDIR=$(LIBDIR)/smlserver
	$(MAKE) -C src/SMLserver/apache install LIBDIR=$(LIBDIR)/smlserver/lib

install_smlserver:install_smlserver0
	$(MKDIR) $(SYSCONFDIR)/smlserverc
	if [ -e $(SYSCONFDIR)/smlserverc/mlb-path-map ]; \
           then true; \
           else echo "SML_LIB $(exec_prefix)/lib/smlserver" > $(SYSCONFDIR)/smlserverc/mlb-path-map; \
        fi

# Some old targets
#install_smlserver_oracle:
#	$(MKDIR) $(INSTDIR_SMLSERVER)/lib
#	$(INSTALL) src/SMLserver/apache/libsmloracle.so.1.0 $(INSTDIR_SMLSERVER)/lib
#	cd $(INSTDIR_SMLSERVER) && $(LN) libsmloracle.so.1.0 lib/libsmloracle.so.1
#	cd $(INSTDIR_SMLSERVER) && $(LN) libsmloracle.so.1 lib/libsmloracle.so

# SMLSERVER_HOST=hug.it.edu
# SMLSERVER_HOSTDIR=$(SMLSERVER_HOST):/web/smlserver/www/dist

# dist_smlserver:
# 	scp NEWS_SMLSERVER $(SMLSERVER_HOSTDIR)/NEWS_SMLSERVER-$(KITVERSION).txt
# 	scp README_SMLSERVER $(SMLSERVER_HOSTDIR)/README_SMLSERVER-$(KITVERSION).txt
# 	scp doc/smlserver.pdf $(SMLSERVER_HOSTDIR)/smlserver-$(KITVERSION).pdf
# 	scp ../smlserver-$(KITVERSION).tgz $(SMLSERVER_HOSTDIR)/
# 	scp $(RPMDIR)/RPMS/i386/smlserver-$(KITVERSION)-1.i386.rpm $(SMLSERVER_HOSTDIR)/
# 	scp $(RPMDIR)/SRPMS/smlserver-$(KITVERSION)-1.src.rpm $(SMLSERVER_HOSTDIR)/


HOST=ssh.itu.dk
HOSTDIR=$(HOST):/import/www/research/mlkit/dist
TESTDATE=2007-04-12

dist_mlkit:
	scp NEWS $(HOSTDIR)/NEWS-$(KITVERSION).txt
	scp README $(HOSTDIR)/README-$(KITVERSION).txt
	scp doc/mlkit.pdf $(HOSTDIR)/mlkit-$(KITVERSION).pdf
	scp ../test_reports/test_report-native-$(TESTDATE).pdf $(MLKIT_HOSTDIR)/test_report-native-$(KITVERSION).pdf
	scp ../test_reports/test_report-kam-$(TESTDATE).pdf $(MLKIT_HOSTDIR)/test_report-kam-$(KITVERSION).pdf
	scp dist/mlkit-$(KITVERSION)-i386.tgz $(HOSTDIR)/
