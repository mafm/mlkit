SHELL=@SHELL@

KITVERSION=@PACKAGE_VERSION@

srcdir=@srcdir@
top_srcdir=@top_srcdir@
prefix=@prefix@
VPATH=@srcdir@

INSTDIR=$(DESTDIR)@exec_prefix@/mlkit
INSTDIR_KAM=$(DESTDIR)@exec_prefix@/mlkit_kam
INSTDIR_BARRY=$(DESTDIR)@exec_prefix@/barry
INSTDIR_SMLSERVER=$(DESTDIR)@exec_prefix@/smlserver

MKDIR=$(top_srcdir)/mkinstalldirs
INSTALL=@INSTALL@
INSTALLDATA=@INSTALL_DATA@
LN=@LN_S@
STRIP=strip
DIFF=diff
MLCOMP=@mlcomp@

CWD=$(shell pwd) 

export INSTDIR
export INSTDIR_KAM
export INSTDIR_BARRY
export INSTDIR_SMLSERVER

include Makefiledefault

ARCH-OS=x86-linux
#ARCH-OS=x86-bsd

RPMDIR=/usr/src/rpm
#RPMDIR=/usr/src/redhat

# Some commands

@SET_MAKE@

CLEAN=rm -rf MLB PM CM *~ .\#*

.PHONY: mlkit mlkit_kam smlserver barry clean clean_mlb install
.PHONY: install_smlserver

all: mlkit

mlkit_basislibs:
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -no_gc basis.mlb)
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -gc basis.mlb)
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -gc -prof basis.mlb)
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -no_gc -prof basis.mlb)

mlkit_kitlibs:
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -no_gc kitlib.mlb)
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -gc kitlib.mlb)
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -gc -prof kitlib.mlb)
	(cd basis && SML_LIB=$(CWD) ../bin/mlkit -c -no_gc -prof kitlib.mlb)

mlkit_libs:
	(cd basis && find -name MLB -type d | xargs rm -rf)
	$(MAKE) mlkit_basislibs
	$(MAKE) mlkit_kitlibs

install_mlkit_basislibs:
	$(MKDIR) $(INSTDIR)/basis/MLB
	$(MKDIR) $(INSTDIR)/basis/MLB/RI
	$(MKDIR) $(INSTDIR)/basis/MLB/RI_GC
	$(MKDIR) $(INSTDIR)/basis/MLB/RI_GC_PROF
	$(MKDIR) $(INSTDIR)/basis/MLB/RI_PROF
	$(MKDIR) $(INSTDIR)/basis/io/MLB
	$(MKDIR) $(INSTDIR)/basis/io/MLB/RI
	$(MKDIR) $(INSTDIR)/basis/io/MLB/RI_GC
	$(MKDIR) $(INSTDIR)/basis/io/MLB/RI_GC_PROF
	$(MKDIR) $(INSTDIR)/basis/io/MLB/RI_PROF
	$(INSTALLDATA) -p basis/MLB/RI/*.{d,eb,eb1,lnk,o,bdy} $(INSTDIR)/basis/MLB/RI
	$(INSTALLDATA) -p basis/MLB/RI_GC/*.{d,eb,eb1,lnk,o,bdy} $(INSTDIR)/basis/MLB/RI_GC
	$(INSTALLDATA) -p basis/MLB/RI_PROF/*.{d,eb,eb1,lnk,o,bdy,rev} $(INSTDIR)/basis/MLB/RI_PROF
	$(INSTALLDATA) -p basis/MLB/RI_GC_PROF/*.{d,eb,eb1,lnk,o,bdy,rev} $(INSTDIR)/basis/MLB/RI_GC_PROF
	$(INSTALLDATA) -p basis/io/MLB/RI/*.{d,eb,eb1,lnk,o,bdy} $(INSTDIR)/basis/io/MLB/RI
	$(INSTALLDATA) -p basis/io/MLB/RI_GC/*.{d,eb,eb1,lnk,o,bdy} $(INSTDIR)/basis/io/MLB/RI_GC
	$(INSTALLDATA) -p basis/io/MLB/RI_PROF/*.{d,eb,eb1,lnk,o,bdy,rev} $(INSTDIR)/basis/io/MLB/RI_PROF
	$(INSTALLDATA) -p basis/io/MLB/RI_GC_PROF/*.{d,eb,eb1,lnk,o,bdy,rev} $(INSTDIR)/basis/io/MLB/RI_GC_PROF

nj:
	$(MKDIR) bin
	$(MAKE) -C src mlkit_nj

mlkit:
	$(MKDIR) bin
	$(MAKE) -C src mlkit

mlkit_kam:
	$(MKDIR) bin
	$(MAKE) -C src mlkit_kam

mlkit_kam_nj:
	$(MKDIR) bin
	$(MAKE) -C src mlkit_kam_nj

smlserver:
	$(MKDIR) bin
	$(MAKE) -C src smlserver

barry:
	$(MKDIR) bin
	$(MAKE) -C src barry

clean:
	$(CLEAN) bin run mlkit.spec smlserver.spec lib bootstrap dist
	cd basis && $(MAKE) clean
	cd doc/manual && $(MAKE) clean
	cd kitlib && $(CLEAN) run
	cd ml-yacc-lib && $(CLEAN)
	cd kitdemo && $(CLEAN) run */PM */*~
	cd test && $(MAKE) clean
	cd test_dev && $(CLEAN) run *.out *.log
	cd src && $(MAKE) clean
#	cd smlserver_demo && $(CLEAN) sources.pm nsd.mael.tcl
#	cd smlserver_demo/lib && $(CLEAN)
#	cd smlserver_demo/demo && $(CLEAN) 
#	cd smlserver_demo/demo/rating && $(CLEAN) 
#	cd smlserver_demo/demo/employee && $(CLEAN) 
#	cd smlserver_demo/demo/link && $(CLEAN) 
#	cd smlserver_demo/demo_lib && $(CLEAN) 
#	cd smlserver_demo/demo_lib/orasql && $(CLEAN) 
#	cd smlserver_demo/demo_lib/pgsql && $(CLEAN) 
#	cd smlserver_demo/scs_lib && $(CLEAN) 
#	cd smlserver_demo/scs_lib/pgsql && $(CLEAN)
#	cd smlserver_demo/log && rm -f server.log access* nspid*
#	cd smlserver_demo/www && $(CLEAN)
#	cd smlserver_demo/www/demo && $(CLEAN)
#	cd smlserver_demo/www/demo/rating && $(CLEAN)
#	cd smlserver_demo/www/demo/link && $(CLEAN)
#	cd smlserver_demo/www/demo/employee && $(CLEAN)
	cd smlserver && $(CLEAN)
	cd smlserver/xt && $(CLEAN)
	cd smlserver/xt/demolib && $(CLEAN)
	cd smlserver/xt/libxt && $(CLEAN)
	cd smlserver/xt/www && $(CLEAN)

clean_mlb:
#	rm -rf MLB */MLB */*/MLB */*/*/MLB */*/*/*/MLB */*/*/*/*/MLB */*/*/*/*/*/MLB 
	find . -name "MLB" -type d | xargs rm -Rf

tgz_export:
	cd ..; rm -rf mlkit-$(KITVERSION) mlkit-$(KITVERSION).tgz
	cd ..; cvs -d linux.it.edu:/cvsroot -q export -D now -d mlkit-$(KITVERSION) mlkit/kit
	cd ..; tar czf mlkit-$(KITVERSION).tgz mlkit-$(KITVERSION)
	cd ..; rm -rf mlkit-$(KITVERSION)

tgz:
	cd ..; rm -rf mlkit-$(KITVERSION) mlkit-$(KITVERSION).tgz
	cd ..; cp -d -f -p -R kit mlkit-$(KITVERSION)
	cd ../mlkit-$(KITVERSION); $(MAKE) clean
	cd ../mlkit-$(KITVERSION); rm -rf test_dev
	cd ../mlkit-$(KITVERSION); rm -rf CVS */CVS */*/CVS */*/*/CVS */*/*/*/CVS */*/*/*/*/CVS */*/*/*/*/*/CVS
	cd ../mlkit-$(KITVERSION); rm -rf .cvsignore */.cvsignore */*/.cvsignore \
           */*/*/.cvsignore */*/*/*/.cvsignore */*/*/*/*/.cvsignore \
           */*/*/*/*/*/.cvsignore
	cd ..; tar czf mlkit-$(KITVERSION).tgz mlkit-$(KITVERSION)
	cd ..; rm -rf mlkit-$(KITVERSION)

tgz_smlserver:
	cd ..; rm -rf smlserver-$(KITVERSION) smlserver-$(KITVERSION).tgz
	cd ..; cp -d -f -p -R kit smlserver-$(KITVERSION)
	cd ../smlserver-$(KITVERSION); $(MAKE) clean
	cd ../smlserver-$(KITVERSION); rm -rf test_dev
	cd ../smlserver-$(KITVERSION); rm -rf CVS */CVS */*/CVS */*/*/CVS */*/*/*/CVS */*/*/*/*/CVS */*/*/*/*/*/CVS
	cd ../smlserver-$(KITVERSION); rm -rf .cvsignore */.cvsignore */*/.cvsignore \
           */*/*/.cvsignore */*/*/*/.cvsignore */*/*/*/*/.cvsignore \
           */*/*/*/*/*/.cvsignore
	cd ..; tar czf smlserver-$(KITVERSION).tgz smlserver-$(KITVERSION)
	cd ..; rm -rf smlserver-$(KITVERSION)

%.spec: %.spec.in
	sed -e "s+@VERSION@+$(KITVERSION)+g" < $< > $@

rpm_smlserver: smlserver.spec
	# assume that ``make tgz_smlserver'' has been run 
	# as a user other than root!
	cp -f ../smlserver-$(KITVERSION).tgz $(RPMDIR)/SOURCES/
	cp -f smlserver.spec $(RPMDIR)/SPECS/smlserver-$(KITVERSION).spec
	(cd $(RPMDIR)/SPECS; rpm -ba smlserver-$(KITVERSION).spec)

rpm: mlkit.spec
	# assume that ``make tgz'' has been run 
	# as a user other than root!
	cp -f ../mlkit-$(KITVERSION).tgz $(RPMDIR)/SOURCES/
	cp -f mlkit.spec $(RPMDIR)/SPECS/mlkit-$(KITVERSION).spec
	(cd $(RPMDIR)/SPECS; rpm -ba mlkit-$(KITVERSION).spec)

install_kitdemo:
	$(MKDIR) $(INSTDIR)/kitdemo
	$(MKDIR) $(INSTDIR)/kitdemo/utils
	$(INSTALLDATA) kitdemo/*.{sml,mlb,c} $(INSTDIR)/kitdemo 
	$(INSTALLDATA) kitdemo/utils/*.{sml,mlb} $(INSTDIR)/kitdemo/utils 

install_basis:
	$(MKDIR) $(INSTDIR)/basis
	$(MKDIR) $(INSTDIR)/basis/io
	$(INSTALLDATA) -p basis/*.{sml,mlb} $(INSTDIR)/basis
	$(INSTALLDATA) -p basis/io/*.{sml,sig} $(INSTDIR)/basis/io

install_man:
	$(MKDIR) $(INSTDIR)/man
	$(MKDIR) $(INSTDIR)/man/man1
	$(INSTALLDATA) man/man1/*.1 $(INSTDIR)/man/man1

install_license:
	$(MKDIR) $(INSTDIR)/license
	$(INSTALLDATA) doc/license/{GPL-LICENSE,MLKit-LICENSE,MLton-LICENSE,SMLNJ-LIB-LICENSE,SMLNJ-LICENSE} $(INSTDIR)/license

install_top:
	$(MKDIR) $(INSTDIR)
	$(MKDIR) $(INSTDIR)/bin
	$(MKDIR) $(INSTDIR)/doc
#	$(MKDIR) $(INSTDIR)/ml-yacc-lib
#	$(MKDIR) $(INSTDIR)/kitlib
	$(INSTALLDATA) README $(INSTDIR)
	$(INSTALLDATA) Makefile Makefile.in $(INSTDIR)
	$(INSTALLDATA) Makefiledefault $(INSTDIR)
	$(INSTALL) mkinstalldirs configure $(INSTDIR)
#	$(INSTALLDATA) -p ml-yacc-lib/*.{sml,mlb} $(INSTDIR)/ml-yacc-lib
	$(MAKE) install_kitdemo
	$(MAKE) install_basis
	$(MAKE) install_man
	$(MAKE) install_license INSTDIR=$(INSTDIR)/doc

install_runtime:
	$(MKDIR) $(INSTDIR)/lib
	$(INSTALLDATA) lib/runtimeSystem.a $(INSTDIR)/lib
	$(INSTALLDATA) lib/runtimeSystemProf.a $(INSTDIR)/lib
	$(INSTALLDATA) lib/runtimeSystemGC.a $(INSTDIR)/lib
	$(INSTALLDATA) lib/runtimeSystemGCProf.a $(INSTDIR)/lib
	$(INSTALLDATA) lib/runtimeSystemGenGC.a $(INSTDIR)/lib
	$(INSTALLDATA) lib/runtimeSystemGenGCProf.a $(INSTDIR)/lib

install:
	$(MKDIR) $(INSTDIR)
	$(MKDIR) $(INSTDIR)/bin
	$(INSTALL) bin/mlkit $(INSTDIR)/bin
	$(INSTALL) bin/rp2ps $(INSTDIR)/bin
	$(INSTALL) bin/kittester $(INSTDIR)/bin
	$(MKDIR) $(INSTDIR)/lib
	$(MKDIR) $(INSTDIR)/lib/mlkit
	$(MAKE) install_runtime INSTDIR=$(INSTDIR)/lib/mlkit
	$(MAKE) install_basis INSTDIR=$(INSTDIR)/lib/mlkit
	$(MAKE) install_mlkit_basislibs INSTDIR=$(INSTDIR)/lib/mlkit
	$(MAKE) install_man
	$(MKDIR) $(INSTDIR)/share
	$(MKDIR) $(INSTDIR)/share/mlkit
	$(MAKE) install_kitdemo INSTDIR=$(INSTDIR)/share/mlkit
	$(MAKE) install_test INSTDIR=$(INSTDIR)/share/mlkit
	$(MKDIR) $(INSTDIR)/share/doc
	$(MKDIR) $(INSTDIR)/share/doc/mlkit
	$(MAKE) install_license INSTDIR=$(INSTDIR)/share/doc/mlkit
	$(INSTALLDATA) doc/mlkit.pdf $(INSTDIR)/share/doc/mlkit/
	$(INSTALLDATA) NEWS $(INSTDIR)/share/doc/mlkit/

# The following is necessary if you want to either run kittester
# or bootstrap the Kit.

install_with_basislibs:
	$(MAKE) install
	$(MAKE) install_mlkit_basislibs

install_test:
	$(MKDIR) $(INSTDIR)/test
	$(MKDIR) $(INSTDIR)/test/mlyacc $(INSTDIR)/test/ray $(INSTDIR)/test/nucleic $(INSTDIR)/test/danwang
	$(MKDIR) $(INSTDIR)/test/barnes-hut $(INSTDIR)/test/logic
	$(MKDIR) $(INSTDIR)/test/DATA $(INSTDIR)/test/LEXGEN_DATA $(INSTDIR)/test/VLIW_DATA
	$(MKDIR) $(INSTDIR)/test/ray/DATA $(INSTDIR)/test/mlyacc/DATA
	$(INSTALL) test/Makefile $(INSTDIR)/test
	$(INSTALL) test/Makefile test/*.{tst,sml,sig,mlb,out.ok,log.ok,txt,c} $(INSTDIR)/test
	$(INSTALL) test/README $(INSTDIR)/test 
	$(INSTALL) test/DATA/*.{gml,sml} $(INSTDIR)/test/DATA
	$(INSTALL) test/LEXGEN_DATA/*.lex $(INSTDIR)/test/LEXGEN_DATA 
	$(INSTALL) test/VLIW_DATA/*.s $(INSTDIR)/test/VLIW_DATA 
	$(INSTALL) test/ray/DATA/TEST $(INSTDIR)/test/ray/DATA
	$(INSTALL) test/ray/input test/ray/README test/ray/load test/ray/*.{sml,mlb} $(INSTDIR)/test/ray
	$(INSTALL) test/mlyacc/DATA/*.grm $(INSTDIR)/test/mlyacc/DATA
	$(INSTALL) test/mlyacc/*.{sig,sml,mlb} $(INSTDIR)/test/mlyacc
	$(INSTALL) test/nucleic/MAIL test/nucleic/*.{sml,mlb,tex,bbl} $(INSTDIR)/test/nucleic
	$(INSTALL) test/danwang/*.{sml,sig,mlb} $(INSTDIR)/test/danwang
	$(INSTALL) test/barnes-hut/*.{sml,mlb} test/barnes-hut/load test/barnes-hut/README $(INSTDIR)/test/barnes-hut
	$(INSTALL) test/logic/*.{sml,mlb} $(INSTDIR)/test/logic
	cd $(INSTDIR)/test && ln -sf README testlink
	cd $(INSTDIR)/test && ln -sf testcycl testcycl
	cd $(INSTDIR)/test && ln -sf exists.not testbadl
	cd $(INSTDIR)/test && echo -e 'hardlinkA' >> hardlinkA
	cd $(INSTDIR)/test && ln -f hardlinkA hardlinkB

install_src:
	$(MKDIR) $(INSTDIR)/src
	$(MKDIR) $(INSTDIR)/src/Common $(INSTDIR)/src/Compiler $(INSTDIR)/src/Manager $(INSTDIR)/src/Pickle 
	$(MKDIR) $(INSTDIR)/src/CUtils $(INSTDIR)/src/Edlib $(INSTDIR)/src/Parsing $(INSTDIR)/src/Runtime 
	$(MKDIR) $(INSTDIR)/src/SMLserver $(INSTDIR)/src/Tools
	$(MKDIR) $(INSTDIR)/src/SMLserver/apache
	$(MKDIR) $(INSTDIR)/src/SMLserver/apache/test
	$(MKDIR) $(INSTDIR)/src/Common/EfficientElab
	$(MKDIR) $(INSTDIR)/src/Compiler/Backend $(INSTDIR)/src/Compiler/Lambda $(INSTDIR)/src/Compiler/Regions
	$(MKDIR) $(INSTDIR)/src/Compiler/Backend/Barry $(INSTDIR)/src/Compiler/Backend/Dummy $(INSTDIR)/src/Compiler/Backend/KAM
	$(MKDIR) $(INSTDIR)/src/Compiler/Backend/X86
	$(MKDIR) $(INSTDIR)/src/Tools/Benchmark $(INSTDIR)/src/Tools/GenOpcodes $(INSTDIR)/src/Tools/MlbMake $(INSTDIR)/src/Tools/Rp2ps
	$(MKDIR) $(INSTDIR)/src/Tools/Tester $(INSTDIR)/src/Tools/MspComp
	$(MKDIR) $(INSTDIR)/src/heap2exec
	$(INSTALLDATA) src/Makefile src/*.{mlb,sml,cm,in} $(INSTDIR)/src
	$(INSTALLDATA) src/Common/*.{mlb,sml,cm} $(INSTDIR)/src/Common
	$(INSTALLDATA) src/Common/EfficientElab/*.sml $(INSTDIR)/src/Common/EfficientElab
	$(INSTALLDATA) src/Compiler/*.{mlb,sml,cm} $(INSTDIR)/src/Compiler
	$(INSTALLDATA) src/Compiler/Lambda/*.sml $(INSTDIR)/src/Compiler/Lambda
	$(INSTALLDATA) src/Compiler/Regions/*.sml $(INSTDIR)/src/Compiler/Regions
	$(INSTALLDATA) src/Compiler/Backend/*.sml $(INSTDIR)/src/Compiler/Backend
	$(INSTALLDATA) src/Compiler/Backend/Barry/*.sml $(INSTDIR)/src/Compiler/Backend/Barry
	$(INSTALLDATA) src/Compiler/Backend/Dummy/*.sml $(INSTDIR)/src/Compiler/Backend/Dummy
	$(INSTALLDATA) src/Compiler/Backend/KAM/*.{sml,spec} $(INSTDIR)/src/Compiler/Backend/KAM
	$(INSTALLDATA) src/Compiler/Backend/X86/*.sml $(INSTDIR)/src/Compiler/Backend/X86
	$(INSTALLDATA) src/Manager/*.{sml,mlb,cm} $(INSTDIR)/src/Manager
	$(INSTALLDATA) src/Pickle/*.{sml,sig,mlb,cm} $(INSTDIR)/src/Pickle
	$(INSTALLDATA) src/CUtils/Makefile src/CUtils/*.{c,h} $(INSTDIR)/src/CUtils
	$(INSTALLDATA) src/Edlib/Makefile src/Edlib/*.{sml,mlb,cm} $(INSTDIR)/src/Edlib
	$(INSTALLDATA) src/Parsing/*.{sml,sig,grm,lex} $(INSTDIR)/src/Parsing
	$(INSTALLDATA) src/Runtime/Makefile src/Runtime/*.{c,h,in} $(INSTDIR)/src/Runtime
	$(INSTALLDATA) src/SMLserver/Makefile src/SMLserver/*.{c,h} $(INSTDIR)/src/SMLserver
	$(INSTALLDATA) src/SMLserver/apache/Makefile.in src/SMLserver/apache/Makefile src/SMLserver/apache/README $(INSTDIR)/src/SMLserver/apache
	$(INSTALLDATA) src/SMLserver/apache/Notes src/SMLserver/apache/*.{c,h,in} $(INSTDIR)/src/SMLserver/apache
	$(INSTALLDATA) src/SMLserver/apache/test/Makefile src/SMLserver/apache/test/*.{c,txt} $(INSTDIR)/src/SMLserver/apache/test
	$(INSTALLDATA) src/Tools/Benchmark/*.{sml,mlb} src/Tools/Benchmark/Makefile $(INSTDIR)/src/Tools/Benchmark
	$(INSTALLDATA) src/Tools/GenOpcodes/*.{sml,mlb,in} src/Tools/GenOpcodes/Makefile $(INSTDIR)/src/Tools/GenOpcodes
	$(INSTALLDATA) src/Tools/MlbMake/*.{sml,mlb,cm,in} src/Tools/MlbMake/Makefile $(INSTDIR)/src/Tools/MlbMake
	$(INSTALLDATA) src/Tools/Rp2ps/*.{c,h,in} src/Tools/Rp2ps/Makefile $(INSTDIR)/src/Tools/Rp2ps
	$(INSTALLDATA) src/Tools/Tester/*.{sml,mlb,in} src/Tools/Tester/Makefile $(INSTDIR)/src/Tools/Tester
	$(INSTALLDATA) src/Tools/MspComp/*.sml src/Tools/MspComp/Makefile $(INSTDIR)/src/Tools/MspComp
	$(INSTALLDATA) src/heap2exec/README src/heap2exec/run.$(ARCH-OS) $(INSTDIR)/src/heap2exec
	$(INSTALL) src/heap2exec/heap2exec $(INSTDIR)/src/heap2exec

bootstrap0: install_test install_src
	$(INSTALL) bin/kittester $(INSTDIR)/bin

bootstrap_first: 
	$(MAKE) install_top
	$(MAKE) install_runtime
	$(INSTALL) bin/{mlkit,rp2ps} $(INSTDIR)/bin
	$(INSTALLDATA) doc/mlkit.pdf $(INSTDIR)/doc
	$(MAKE) bootstrap0

bootstrap_next_build:
	cd src && $(MAKE) genopcodes
	cd src/Compiler && SML_LIB=$(CWD) ../../bin/mlkit -gc native.mlb

bootstrap_next_install: 
	$(MAKE) install_top
	$(INSTALLDATA) doc/mlkit.pdf $(INSTDIR)/doc
	$(MAKE) install_runtime
	$(INSTALL) bin/{rp2ps,kittester} $(INSTDIR)/bin
	$(INSTALL) src/Compiler/run $(INSTDIR)/bin/mlkit
	$(MAKE) install_test
	$(MAKE) install_src

bootstrap_next: 
	$(MAKE) bootstrap_next_build
	$(MAKE) bootstrap_next_install

.PHONY: bootstrap
bootstrap:
	$(MKDIR) bootstrap
	$(CLEAN) bootstrap/mlkit-v1
	$(MAKE) bootstrap_first INSTDIR=bootstrap/mlkit-v1
	$(CLEAN) bootstrap/mlkit-v2
	$(MAKE) -C bootstrap/mlkit-v1 bootstrap_next INSTDIR=../mlkit-v2
	$(CLEAN) bootstrap/mlkit-v3
	$(MAKE) -C bootstrap/mlkit-v2 bootstrap_next INSTDIR=../mlkit-v3
	$(STRIP) bootstrap/mlkit-v2/bin/mlkit
	$(STRIP) bootstrap/mlkit-v3/bin/mlkit
	$(DIFF) bootstrap/mlkit-v2/bin/mlkit bootstrap/mlkit-v3/bin/mlkit
	$(INSTALL) bootstrap/mlkit-v3/bin/mlkit bin/mlkit

.PHONY: man_mlkit
man_mlkit:
	bin/mlkit -man > man/man1/mlkit.1

MLKIT_DIST_BIN=mlkit-$(KITVERSION)-i386
.PHONY: mlkit_i386_tgz
mlkit_i386_tgz:
	$(MKDIR) dist
	rm -rf dist/$(MLKIT_DIST_BIN)
	$(MAKE) install INSTDIR=dist/$(MLKIT_DIST_BIN)
	$(INSTALLDATA) doc/README_BIN dist/$(MLKIT_DIST_BIN)/share/doc/mlkit
	(cd dist; tar czvf $(MLKIT_DIST_BIN).tgz $(MLKIT_DIST_BIN))

MLKIT_DIST_SRC=mlkit-$(KITVERSION)-src
.PHONY: mlkit_src_tgz
mlkit_src_tgz:
	./autobuild
	$(MKDIR) dist
	rm -rf dist/$(MLKIT_DIST_SRC)
	$(MKDIR) dist/$(MLKIT_DIST_SRC)
	$(MAKE) install_src INSTDIR=dist/$(MLKIT_DIST_SRC)
	$(MAKE) install_test INSTDIR=dist/$(MLKIT_DIST_SRC)
	$(MAKE) install_basis INSTDIR=dist/$(MLKIT_DIST_SRC)
	$(MAKE) install_kitdemo INSTDIR=dist/$(MLKIT_DIST_SRC)
	$(MAKE) install_man INSTDIR=dist/$(MLKIT_DIST_SRC)
	$(INSTALLDATA) README dist/$(MLKIT_DIST_SRC)
	$(INSTALLDATA) NEWS dist/$(MLKIT_DIST_SRC)
	$(INSTALLDATA) Makefile.in dist/$(MLKIT_DIST_SRC)
	$(INSTALL) configure dist/$(MLKIT_DIST_SRC)
	$(INSTALLDATA) Makefiledefault dist/$(MLKIT_DIST_SRC)
	$(INSTALL) mkinstalldirs dist/$(MLKIT_DIST_SRC)
	$(INSTALL) install-sh dist/$(MLKIT_DIST_SRC)
	$(MKDIR) dist/$(MLKIT_DIST_SRC)/smlserver_demo
	$(INSTALL) smlserver_demo/Makefile.in dist/$(MLKIT_DIST_SRC)/smlserver_demo
	$(MKDIR) dist/$(MLKIT_DIST_SRC)/doc
	$(MAKE) install_license INSTDIR=dist/$(MLKIT_DIST_SRC)/doc
	$(INSTALLDATA) doc/{README_BIN.in,mlkit.pdf} dist/$(MLKIT_DIST_SRC)/doc
	(cd dist; tar czvf $(MLKIT_DIST_SRC).tgz $(MLKIT_DIST_SRC))

# The following is obsolete!!
bootstrap_kam: install_kam bootstrap0

install_kam:
	rm -rf $(INSTDIR_KAM)
	$(MKDIR) $(INSTDIR_KAM)
	$(MKDIR) $(INSTDIR_KAM)/bin
	$(MKDIR) $(INSTDIR_KAM)/doc
	$(INSTALL) bin/mlkit_kam $(INSTDIR_KAM)/bin
	$(INSTALL) bin/kam $(INSTDIR_KAM)/bin
	$(INSTALLDATA) copyright $(INSTDIR_KAM)
	$(INSTALLDATA) README $(INSTDIR_KAM)
	$(INSTALLDATA) -R kitdemo $(INSTDIR_KAM)/kitdemo 
	$(INSTALLDATA) -R ml-yacc-lib $(INSTDIR_KAM)/ml-yacc-lib
	$(INSTALLDATA) -R basis $(INSTDIR_KAM)/basis
	$(INSTALLDATA) doc/mlkit.pdf $(INSTDIR_KAM)/doc

#	echo '#!/bin/sh' > $(INSTDIR_KAM)/bin/mlkit_kam
#	echo -e '$(INSTDIR_KAM)/bin/mlkit_kam.$(ARCH-OS) $(INSTDIR_KAM) $$*' >> $(INSTDIR_KAM)/bin/mlkit_kam
#	chmod a+x $(INSTDIR_KAM)/bin/mlkit_kam
#	rm -f /usr/bin/mlkit_kam
#	cp -f -p $(INSTDIR_KAM)/bin/mlkit_kam /usr/bin/mlkit_kam

install_barry:
	rm -rf $(INSTDIR_BARRY)
	$(MKDIR) $(INSTDIR_BARRY)
	$(MKDIR) $(INSTDIR_BARRY)/bin
	$(MKDIR) $(INSTDIR_BARRY)/doc
	$(INSTALL) bin/barry.$(ARCH-OS) $(INSTDIR_BARRY)/bin
	$(INSTALL) copyright $(INSTDIR_BARRY)
	$(INSTALL) README $(INSTDIR_BARRY)
	$(INSTALL) README_BARRY $(INSTDIR_BARRY)
	$(INSTALL) -R kitdemo $(INSTDIR_BARRY)/kitdemo 
	$(INSTALL) -R ml-yacc-lib $(INSTDIR_BARRY)/ml-yacc-lib
	$(INSTALL) -R basis $(INSTDIR_BARRY)/basis
	$(INSTALL) doc/mlkit.pdf $(INSTDIR_BARRY)/doc
	chown -R `whoami`.`whoami` $(INSTDIR_BARRY)
	chmod -R ug+rw $(INSTDIR_BARRY)
	chmod -R o+r $(INSTDIR_BARRY)

	echo '#!/bin/sh' > $(INSTDIR_BARRY)/bin/barry
	echo -e '$(INSTDIR_BARRY)/bin/barry.$(ARCH-OS) $(INSTDIR_BARRY) $$*' >> $(INSTDIR_BARRY)/bin/barry
	chmod a+x $(INSTDIR_BARRY)/bin/barry
	rm -f /usr/bin/barry
	cp -f -p $(INSTDIR_BARRY)/bin/barry /usr/bin/barry

install_smlserver:
	$(MKDIR) $(INSTDIR_SMLSERVER)
	$(MKDIR) $(INSTDIR_SMLSERVER)/bin
	$(MKDIR) $(INSTDIR_SMLSERVER)/doc
	$(MKDIR) $(INSTDIR_SMLSERVER)/basis
	$(MKDIR) $(INSTDIR_SMLSERVER)/basis/io
	$(INSTALL) bin/mspcomp $(INSTDIR_SMLSERVER)/bin
	$(INSTALL) bin/smlserverc $(INSTDIR_SMLSERVER)/bin
	$(INSTALLDATA) copyright $(INSTDIR_SMLSERVER)
	$(INSTALLDATA) README $(INSTDIR_SMLSERVER)
	$(INSTALLDATA) README_SMLSERVER $(INSTDIR_SMLSERVER)
	$(INSTALLDATA) NEWS_SMLSERVER $(INSTDIR_SMLSERVER)
	$(MAKE) -C smlserver_demo install
	$(INSTALLDATA) basis/*.{sml,mlb} $(INSTDIR_SMLSERVER)/basis
	$(INSTALLDATA) basis/io/*.{sml,sig} $(INSTDIR_SMLSERVER)/basis/io
#	$(INSTALLDATA) doc/mlkit.pdf $(INSTDIR_SMLSERVER)/doc
	$(INSTALLDATA) doc/smlserver.pdf $(INSTDIR_SMLSERVER)/doc
	$(MAKE) -C src/SMLserver/apache install
#
# The following is also done in the %post section in the rpm file, 
# because the --prefix option to rpm can change the installation 
# directory! 
#
#	echo "#!$(SHELL)" > $(INSTDIR_SMLSERVER)/bin/smlserverc
#	echo -e '$(INSTDIR_SMLSERVER)/bin/smlserverc.$(ARCH-OS) $(INSTDIR_SMLSERVER) $$*' >> $(INSTDIR_SMLSERVER)/bin/smlserverc
#	chmod a+x $(INSTDIR_SMLSERVER)/bin/smlserverc

#install_smlserver_oracle:
#	$(MKDIR) $(INSTDIR_SMLSERVER)/lib
#	$(INSTALL) src/SMLserver/apache/libsmloracle.so.1.0 $(INSTDIR_SMLSERVER)/lib
#	cd $(INSTDIR_SMLSERVER) && $(LN) libsmloracle.so.1.0 lib/libsmloracle.so.1
#	cd $(INSTDIR_SMLSERVER) && $(LN) libsmloracle.so.1 lib/libsmloracle.so

SMLSERVER_HOST=hug.it.edu
SMLSERVER_HOSTDIR=$(SMLSERVER_HOST):/web/smlserver/www/dist

dist_smlserver:
	scp NEWS_SMLSERVER $(SMLSERVER_HOSTDIR)/NEWS_SMLSERVER-$(KITVERSION).txt
	scp README_SMLSERVER $(SMLSERVER_HOSTDIR)/README_SMLSERVER-$(KITVERSION).txt
	scp doc/smlserver.pdf $(SMLSERVER_HOSTDIR)/smlserver-$(KITVERSION).pdf
	scp ../smlserver-$(KITVERSION).tgz $(SMLSERVER_HOSTDIR)/
	scp $(RPMDIR)/RPMS/i386/smlserver-$(KITVERSION)-1.i386.rpm $(SMLSERVER_HOSTDIR)/
	scp $(RPMDIR)/SRPMS/smlserver-$(KITVERSION)-1.src.rpm $(SMLSERVER_HOSTDIR)/


MLKIT_HOST=ssh.itu.dk
MLKIT_HOSTDIR=$(MLKIT_HOST):/import/www/research/mlkit/dist
TESTDATE=2004-06-11

dist_mlkit:
	scp NEWS $(MLKIT_HOSTDIR)/NEWS-$(KITVERSION).txt
	scp README $(MLKIT_HOSTDIR)/README-$(KITVERSION).txt
	scp INSTALL $(MLKIT_HOSTDIR)/INSTALL-$(KITVERSION).txt
	scp doc/mlkit.pdf $(MLKIT_HOSTDIR)/mlkit-$(KITVERSION).pdf
	scp ../test_reports/test_report-native-$(TESTDATE).dvi $(MLKIT_HOSTDIR)/test_report-native-$(KITVERSION).dvi
	scp ../test_reports/test_report-kam-$(TESTDATE).dvi $(MLKIT_HOSTDIR)/test_report-kam-$(KITVERSION).dvi
	scp ../mlkit-$(KITVERSION).tgz $(MLKIT_HOSTDIR)/
	scp $(RPMDIR)/RPMS/i386/mlkit-$(KITVERSION)-1.i386.rpm $(MLKIT_HOSTDIR)/
	scp $(RPMDIR)/SRPMS/mlkit-$(KITVERSION)-1.src.rpm $(MLKIT_HOSTDIR)/
